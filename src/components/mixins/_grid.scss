@mixin make-container($space: $padding) {
  margin-left: auto;
  margin-right: auto;
  padding-left:  ($space / 2);
  padding-right: ($space / 2);
  max-width: 100%;
}

@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      width: $container-max-width;
      max-width: 100%;
    }
  }
}

@mixin make-row($space: $padding) {
  @include flexbox();
  @include flex-wrap(wrap);
  margin-right: ($space / -2);
  margin-left: ($space / -2);
}

@mixin make-col($space: $padding) {
  position: relative;
  min-height: 1px;
  padding-left:  ($space / 2);
  padding-right: ($space / 2);
}

@mixin make-col-span($size, $cols: $columns) {
  @include flex(0 0 percentage($size / $cols));
  max-width: percentage($size / $cols);
}

@mixin make-col-offset($size, $cols: $columns) {
  margin-left: percentage($size / $cols);
}

@mixin make-col-push($size, $cols: $columns) {
  left: if($size > 0, percentage($size / $cols), auto);
}

@mixin make-col-pull($size, $cols: $columns) {
  right: if($size > 0, percentage($size / $cols), auto);
}

@mixin make-col-modifier($type, $size, $columns) {
  @if $type == push {
    @include make-col-push($size, $columns);
  } @else if $type == pull {
    @include make-col-pull($size, $columns);
  } @else if $type == offset {
    @include make-col-offset($size, $columns);
  }
}
